{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","state","currentLight","setCurrentLight","useEffect","document","getElementsByClassName","children","style","opacity","timer","setTimeout","clearInterval","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4MA6BeA,MA1Bf,WAAgB,IAAD,EACUC,mBAAS,CAAC,IAAK,IAAK,MAD9B,mBACNC,EADM,aAEuBD,mBAAS,IAFhC,mBAEPE,EAFO,KAEMC,EAFN,KAiBb,OAVAC,qBAAU,WACRC,SAASC,uBAAuB,gBAAgB,GAAGC,SAASL,GAAcM,MAAMC,QAAQ,EACxF,IAAMC,EAAMC,YAAW,WACGR,GAAiBD,EAAa,GAAG,GACjCG,SAASC,uBAAuB,gBAAgB,GAAGC,SAASL,GAAcM,MAAMC,QAAQ,KAE3FR,EAAMC,IAC7B,OAAO,kBAAIU,cAAcF,OAIzB,sBAAKG,UAAU,eAAf,UACI,wBACA,wBACA,4BCZOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,K","file":"static/js/main.639d9216.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component,useEffect,useState } from 'react';\n\nfunction App() {\n  const [state,setState]=useState([3000,1000,2000]) //this state actually holds the array of timer of each signal color\n  const[currentLight,setCurrentLight]=useState(0)   //hold which signal we are in [0-red,1-yellow,2-green]\n  \n  //In useeffect we inially set the opactity of selected signal to 1\n  //Then we have a timer initialzed using settimeout which changes the signal based on the signal time we declared\n  \n  useEffect(()=>{\n    document.getElementsByClassName(\"trafficColor\")[0].children[currentLight].style.opacity=1             \n    const timer=setTimeout(()=>{\n                              setCurrentLight((currentLight+1)%3)\n                              document.getElementsByClassName(\"trafficColor\")[0].children[currentLight].style.opacity=0.3\n                              }\n                          ,state[currentLight])\n    return ()=>clearInterval(timer)\n  })\n\n  return (\n    <div className=\"trafficColor\">\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}